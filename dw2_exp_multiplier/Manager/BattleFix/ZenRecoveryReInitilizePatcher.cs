using System;
using System.IO;
using dw2_exp_multiplier.Base;


namespace dw2_exp_multiplier.Manager
{
    public class ZenRecoveryReInitilizePatcher : IPatcher
    {
        public static readonly string TOOLTIP = ".\n";

        private byte[] data;

        public override void Patch(ref FileStream fs)
        {
            data = PsxSector.ReadSector(ref fs, DW2Slus.GetLba(FileIndex.STAG3000_PRO), DW2Slus.GetSize(FileIndex.STAG3000_PRO));

            byte[] patchedPattern =
            {
                0x09, 0x00, 0x40, 0x10,
                0x07, 0x80, 0x02, 0x3C,
                0xC0, 0x3C, 0x43, 0x24,
                0x21, 0x20, 0xC3, 0x02,
                0x40, 0x03, 0x82, 0x90,
                0x00, 0x00, 0x00, 0x00,
                0x03, 0x00, 0x40, 0x10,
                0x40, 0x10, 0x16, 0x00,
                0x9A, 0xAB, 0x01, 0x08,
                0x40, 0x03, 0x80, 0xA0,
                0x00, 0x02, 0x62, 0x32,
                0x1B, 0x00, 0x40, 0x10,
                0x07, 0x80, 0x02, 0x3C,
                0xC0, 0x3C, 0x43, 0x24,
                0x21, 0x20, 0xC3, 0x02,
                0x46, 0x03, 0x82, 0x90,
                0x00, 0x00, 0x00, 0x00,
                0x15, 0x00, 0x40, 0x10,
                0x40, 0x10, 0x16, 0x00,
                0x46, 0x03, 0x80, 0xA0,
                0x21, 0x10, 0x43, 0x00,
                0x7A, 0x03, 0x43, 0x94,
                0x00, 0x00, 0x00, 0x00,
                0x1C, 0x00, 0x83, 0xA6,
                0x56, 0x03, 0x43, 0xA4,
                0x86, 0x03, 0x43, 0x94,
                0x00, 0x00, 0x00, 0x00,
                0x1E, 0x00, 0x83, 0xA6,
                0x62, 0x03, 0x43, 0xA4,
                0x92, 0x03, 0x43, 0x94,
                0x00, 0x00, 0x00, 0x00,
                0x20, 0x00, 0x83, 0xA6,
                0x6E, 0x03, 0x43, 0xA4,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00
            };
            Buffer.BlockCopy(patchedPattern, 0, data, 0x7AB8, patchedPattern.Length);

            PsxSector.WriteSector(ref fs, ref data, DW2Slus.GetLba(FileIndex.STAG3000_PRO), DW2Slus.GetSize(FileIndex.STAG3000_PRO));
        }
    }
    
}
